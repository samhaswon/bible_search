# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build sdist
        run: |
          pip install build
          python -m build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz
  build_wheels_windows:
    name: Build wheel on windows-latest/${{matrix.arch}}/${{matrix.python_tag}}
    needs: [build_sdist]
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [auto32, auto64, ARM64]

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: actions/setup-python@v4

      - name: Copy wheel
        run: cp dist/*.tar.gz multi_bible_search.tar.gz

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.5
        with:
          package-dir: multi_bible_search.tar.gz
          output-dir: wheelhouse

      - name: Random sleep
        run: |
          $randomSeconds = Get-Random -Minimum 0 -Maximum 121
          echo $randomSeconds
          Start-Sleep -Seconds $randomSeconds

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  deploy:
    needs: [build_wheels_windows, build_sdist]
    name: deploy wheels to pypi
    runs-on: ubuntu-latest
    environment: pypi-release
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
